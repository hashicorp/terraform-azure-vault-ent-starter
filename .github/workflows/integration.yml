name: Integration tests
concurrency: integration_tests

on:
  pull_request:
    paths-ignore:
      - '**/README.md'
      - '**/CHANGELOG.md'
  repository_dispatch:
    types: [ok-to-test-command]

jobs:
  # Branch-based pull request
  integration-trusted:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_USE_OIDC: "true"
      TEST_VAULT_ENT_LICENSE: ${{ secrets.TEST_VAULT_ENT_LICENSE }}
      TEST_RESOURCE_GROUP_LOCATION: ${{ secrets.TEST_RESOURCE_GROUP_LOCATION }}
      TEST_RESOURCE_GROUP_NAME: ${{ secrets.TEST_RESOURCE_GROUP_NAME }}
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
    permissions:
      id-token: write  # https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/guides/service_principal_oidc#configuring-the-service-principal-in-terraform
      contents: read
    steps:
    - name: Branch based PR checkout
      uses: actions/checkout@v3
    - id: integration-test
      uses: ./.github/actions/integration_tests
      with:
        env_suffix: ${{ github.event.pull_request.number }}

  # Repo owner has commented /ok-to-test on a (fork-based) pull request
  integration-fork:
    runs-on: ubuntu-latest
    if:
      github.event_name == 'repository_dispatch' &&
      github.event.client_payload.slash_command.sha != '' &&
      contains(github.event.client_payload.pull_request.head.sha, github.event.client_payload.slash_command.sha)
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_USE_OIDC: "true"
      TEST_VAULT_ENT_LICENSE: ${{ secrets.TEST_VAULT_ENT_LICENSE }}
      TEST_RESOURCE_GROUP_LOCATION: ${{ secrets.TEST_RESOURCE_GROUP_LOCATION }}
      TEST_RESOURCE_GROUP_NAME: ${{ secrets.TEST_RESOURCE_GROUP_NAME }}
      TF_TOKEN_app_terraform_io: ${{ secrets.TF_TOKEN_app_terraform_io }}
    permissions:
      id-token: write  # https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/guides/service_principal_oidc#configuring-the-service-principal-in-terraform
      contents: read
    steps:
    # Check out merge commit
    - name: Fork based /ok-to-test checkout
      uses: actions/checkout@v3
      with:
        ref: 'refs/pull/${{ github.event.client_payload.pull_request.number }}/merge'
    - id: integration-test
      uses: ./.github/actions/integration_tests
      with:
        env_suffix: ${{ github.event.client_payload.pull_request.number }}

    # Update check run called "integration-fork"
    - uses: actions/github-script@v1
      id: update-check-run
      if: ${{ always() }}
      env:
        number: ${{ github.event.client_payload.pull_request.number }}
        job: ${{ github.job }}
        # Conveniently, job.status maps to https://developer.github.com/v3/checks/runs/#update-a-check-run
        conclusion: ${{ job.status }}
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { data: pull } = await github.pulls.get({
            ...context.repo,
            pull_number: process.env.number
          });
          const ref = pull.head.sha;

          const { data: checks } = await github.checks.listForRef({
            ...context.repo,
            ref
          });

          const check = checks.check_runs.filter(c => c.name === process.env.job);

          const { data: result } = await github.checks.update({
            ...context.repo,
            check_run_id: check[0].id,
            status: 'completed',
            conclusion: process.env.conclusion
          });

          return result;
